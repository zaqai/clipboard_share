name: build-and-publish

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      
      # 构建二进制文件
      - uses: wangyoucao577/go-release-action@v1.30
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.20
          binary_name: "clipboardshare"
          extra_files: README.md index.html

      # 准备Docker构建上下文 (仅Linux平台)
      - name: Prepare Docker context
        if: matrix.goos == 'linux'
        run: |
          mkdir -p docker-context
          cp clipboardshare-linux-${{ matrix.goarch }} docker-context/clipboardshare-linux-${{ matrix.goarch }}
          cp index.html README.md docker-context/
          echo "TARGETARCH=${{ matrix.goarch }}" > docker-context/.env
          
      # 构建和推送Docker镜像
      - name: Set up QEMU
        if: matrix.goos == 'linux'
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        if: matrix.goos == 'linux'
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        if: matrix.goos == 'linux'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        if: matrix.goos == 'linux'
        uses: docker/build-push-action@v4
        with:
          context: docker-context
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/clipboardshare:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/clipboardshare:latest