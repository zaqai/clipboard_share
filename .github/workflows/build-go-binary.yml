name: build-and-publish

on:
  release:
    types: [created]

jobs:
  build-release:
    name: Build Binaries and Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 定义所有需要构建的平台
        include:
          # Windows
          - os: windows
            arch: amd64
          - os: windows
            arch: arm64
          # Linux (同时用于 Docker 镜像)
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          # macOS
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Build Binary
        run: |
          # 根据平台生成二进制文件名
          OUTPUT_NAME="clipboardshare-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT_NAME="$OUTPUT_NAME.exe"
          fi

          # 静态编译（确保 Docker 镜像兼容性）
          CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o $OUTPUT_NAME -ldflags="-s -w" .

          # 保存文件名供后续步骤使用
          echo "OUTPUT_NAME=$OUTPUT_NAME" >> $GITHUB_ENV

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.OUTPUT_NAME }}
            README.md
            index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 仅 Linux 平台构建 Docker 镜像
      - name: Build and Push Docker Image
        if: matrix.os == 'linux'
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/clipboardshare:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/clipboardshare:latest
          build-args: |
            TARGETARCH=${{ matrix.arch }}